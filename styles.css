* {
  box-sizing: border-box;
  font-family: sans-serif;
}

@media print {
  * {
    print-color-adjust: exact;
    -webkit-print-color-adjust: exact;
  }
}

p {
  margin: 0;
}

body {
  width: 100vw;
  height: 100vh;
  margin: 0;
  overflow: hidden;
  display: grid;
  align-content: center;
  justify-content: center;
}

main {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 16px;
  gap: 16px;
  overflow-y: auto;
  z-index: 1;
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(0.25em);
  width: 400px;
  max-width: 90vw;
}

@media print {
  main {
    display: none;
  }
}

form {
  display: grid;
  gap: 16px;
  grid-template-areas:
          "odd-color         even-color"
          "border-amount     border-color"
          "separation-amount separation-color"
          "outer-separation  outer-separation"
          "button-reset      button-print";
  grid-template-columns: 1fr 1fr;
  align-items: end;
}

label {
  transition: color ease-in-out 200ms;
}

label:hover,
label:focus {
  color: #dc143c;
}

label[for=odd-color] {
  grid-area: odd-color;
}

label[for=even-color] {
  grid-area: even-color;
}

label[for=border-amount] {
  grid-area: border-amount;
}

label[for=border-color] {
  grid-area: border-color;
}

label[for=separation-amount] {
  grid-area: separation-amount;
}

label[for=separation-color] {
  grid-area: separation-color;
}

label[for=outer-separation] {
  grid-area: outer-separation;
}

.input {
  margin: 0;
  display: flex;
  width: 100%;
  height: 32px;
  appearance: none;
  border: solid 1px #8f1b32;
  outline: none;
  background: #f5f5f5;
  transition-property: border, background, outline;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
  align-items: baseline;
  padding-right: 4px;
  padding-left: 4px;
  gap: 4px;
}

.input > input {
  background: none;
  border: none;
  outline: none;
  height: 32px;
  width: 100%;
}

.input:hover,
.input:focus,
.button:hover,
.button:focus {
  border-color: #dc143c;
  background: #ffffff;
}

.input[type=color] {
  cursor: pointer;
  padding-top: 4px;
  padding-bottom: 4px;
}

.input[type=color]::-moz-color-swatch {
  border: none;
}

.input[type=color]::-webkit-color-swatch {
  border: none;
}

.input[type=color]::-webkit-color-swatch-wrapper {
  padding: 0;
}

.input[type=checkbox] {
  outline: solid 1px #8f1b32;
  border: solid 2px #f5f5f5;
  height: 16px;
  width: 16px;
  padding: 0;
  display: inline-block;
  vertical-align: baseline;
}

.input[type=checkbox]:hover,
.input[type=checkbox]:focus {
  outline-color: #dc143c;
}

.input[type=checkbox]:checked {
  background: #8f1b32;
}

.input[type=checkbox]:checked:hover,
.input[type=checkbox]:checked:focus {
  background: #dc143c;
  outline-color: #dc143c;
}

.button {
  display: block;
  width: 100%;
  height: 32px;
  border: solid 1px #8f1b32;
  padding: 4px;
  outline: none;
  background: #f5f5f5;
  transition-property: border, background, color;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
}

.button.button-reset {
  grid-area: button-reset;
}

.button.button-reset {
  color: #000000;
}

.button.button-reset:hover,
.button.button-reset:focus {
  color: #dc143c;
}

.button.button-print {
  color: #ffffff;
  grid-area: button-print;
  border: none;
  background: #8f1b32;
}

.button.button-print:hover,
.button.button-print:focus {
  color: #ffffff;
  border: none;
  background: #dc143c;
}

footer {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

a {
  color: #2aa9db;
  text-decoration: underline;
  font-weight: bold;
  transition: color ease-in-out 200ms;
}

a:hover,
a:focus {
  color: #dc143c;
}

.wrapper {
  transition-property: margin-left, border;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
  width: calc(100vmin - 2em);
  height: calc(100vmin - 2em);
  border: solid var(--border-amount) var(--border-color);
}

@media screen and (min-width: calc(400px + 100vmin)) {
  .wrapper {
    margin-left: 400px;
  }
}

@media print {
  .wrapper {
    width: 100vmin;
    height: 100vmin;
    margin-left: 0;
  }
}

.board {
  display: grid;
  gap: var(--separation-amount);
  background: var(--separation-color);
  border: solid calc(var(--separation-amount) * var(--outer-separation)) var(--separation-color);
  transition-property: gap, border, background;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
  justify-content: center;
  align-content: center;
  width: 100%;
  height: 100%;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
}

.square {
  transition: background-color ease-in-out 200ms;
}

.square.square-odd {
  background: var(--odd-color);
}

.square.square-even {
  background: var(--even-color);
}
